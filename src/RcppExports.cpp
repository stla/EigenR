// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

// EigenR_det_real
double EigenR_det_real(const Eigen::MatrixXd& M);
RcppExport SEXP _EigenR_EigenR_det_real(SEXP MSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type M(MSEXP);
    rcpp_result_gen = Rcpp::wrap(EigenR_det_real(M));
    return rcpp_result_gen;
END_RCPP
}
// EigenR_det_cplx
std::complex<double> EigenR_det_cplx(const Eigen::MatrixXd& Re, const Eigen::MatrixXd& Im);
RcppExport SEXP _EigenR_EigenR_det_cplx(SEXP ReSEXP, SEXP ImSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type Re(ReSEXP);
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type Im(ImSEXP);
    rcpp_result_gen = Rcpp::wrap(EigenR_det_cplx(Re, Im));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_EigenR_EigenR_det_real", (DL_FUNC) &_EigenR_EigenR_det_real, 1},
    {"_EigenR_EigenR_det_cplx", (DL_FUNC) &_EigenR_EigenR_det_cplx, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_EigenR(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
